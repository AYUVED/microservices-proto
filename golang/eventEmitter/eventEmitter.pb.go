// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.27.0
// source: eventEmitter/eventEmitter.proto

package eventEmitter

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateLogEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App       string `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Data      string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	ProcessId string `protobuf:"bytes,4,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	Type      string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Status    string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	User      string `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CreateLogEventRequest) Reset() {
	*x = CreateLogEventRequest{}
	mi := &file_eventEmitter_eventEmitter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLogEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLogEventRequest) ProtoMessage() {}

func (x *CreateLogEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventEmitter_eventEmitter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLogEventRequest.ProtoReflect.Descriptor instead.
func (*CreateLogEventRequest) Descriptor() ([]byte, []int) {
	return file_eventEmitter_eventEmitter_proto_rawDescGZIP(), []int{0}
}

func (x *CreateLogEventRequest) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *CreateLogEventRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLogEventRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *CreateLogEventRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *CreateLogEventRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateLogEventRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateLogEventRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type CreateLogEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateLogEventResponse) Reset() {
	*x = CreateLogEventResponse{}
	mi := &file_eventEmitter_eventEmitter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLogEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLogEventResponse) ProtoMessage() {}

func (x *CreateLogEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventEmitter_eventEmitter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLogEventResponse.ProtoReflect.Descriptor instead.
func (*CreateLogEventResponse) Descriptor() ([]byte, []int) {
	return file_eventEmitter_eventEmitter_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLogEventResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateMailerEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App         string     `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	From        string     `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To          string     `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Subject     string     `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Body        string     `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	Cc          string     `protobuf:"bytes,6,opt,name=cc,proto3" json:"cc,omitempty"`
	Bcc         string     `protobuf:"bytes,7,opt,name=bcc,proto3" json:"bcc,omitempty"`
	ReplyTo     string     `protobuf:"bytes,8,opt,name=reply_to,json=replyTo,proto3" json:"reply_to,omitempty"`
	ProcessId   string     `protobuf:"bytes,9,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	Type        string     `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Status      string     `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	User        string     `protobuf:"bytes,12,opt,name=user,proto3" json:"user,omitempty"`
	Template    string     `protobuf:"bytes,13,opt,name=template,proto3" json:"template,omitempty"`
	Attachments []string   `protobuf:"bytes,14,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Data        []*DataMap `protobuf:"bytes,15,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateMailerEventRequest) Reset() {
	*x = CreateMailerEventRequest{}
	mi := &file_eventEmitter_eventEmitter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMailerEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMailerEventRequest) ProtoMessage() {}

func (x *CreateMailerEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventEmitter_eventEmitter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMailerEventRequest.ProtoReflect.Descriptor instead.
func (*CreateMailerEventRequest) Descriptor() ([]byte, []int) {
	return file_eventEmitter_eventEmitter_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMailerEventRequest) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *CreateMailerEventRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CreateMailerEventRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *CreateMailerEventRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateMailerEventRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CreateMailerEventRequest) GetCc() string {
	if x != nil {
		return x.Cc
	}
	return ""
}

func (x *CreateMailerEventRequest) GetBcc() string {
	if x != nil {
		return x.Bcc
	}
	return ""
}

func (x *CreateMailerEventRequest) GetReplyTo() string {
	if x != nil {
		return x.ReplyTo
	}
	return ""
}

func (x *CreateMailerEventRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *CreateMailerEventRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateMailerEventRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateMailerEventRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CreateMailerEventRequest) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *CreateMailerEventRequest) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *CreateMailerEventRequest) GetData() []*DataMap {
	if x != nil {
		return x.Data
	}
	return nil
}

type DataMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DataMap) Reset() {
	*x = DataMap{}
	mi := &file_eventEmitter_eventEmitter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMap) ProtoMessage() {}

func (x *DataMap) ProtoReflect() protoreflect.Message {
	mi := &file_eventEmitter_eventEmitter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMap.ProtoReflect.Descriptor instead.
func (*DataMap) Descriptor() ([]byte, []int) {
	return file_eventEmitter_eventEmitter_proto_rawDescGZIP(), []int{3}
}

func (x *DataMap) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataMap) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type CreateMailerEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateMailerEventResponse) Reset() {
	*x = CreateMailerEventResponse{}
	mi := &file_eventEmitter_eventEmitter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMailerEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMailerEventResponse) ProtoMessage() {}

func (x *CreateMailerEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventEmitter_eventEmitter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMailerEventResponse.ProtoReflect.Descriptor instead.
func (*CreateMailerEventResponse) Descriptor() ([]byte, []int) {
	return file_eventEmitter_eventEmitter_proto_rawDescGZIP(), []int{4}
}

func (x *CreateMailerEventResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_eventEmitter_eventEmitter_proto protoreflect.FileDescriptor

var file_eventEmitter_eventEmitter_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x45, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf6,
	0x02, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x63, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x63, 0x12,
	0x10, 0x0a, 0x03, 0x62, 0x63, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x63,
	0x63, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61,
	0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x61, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x19, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0x9b, 0x01, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x45, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x4c,
	0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x4d, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x75, 0x73, 0x65, 0x79, 0x69, 0x6e, 0x62, 0x61, 0x62, 0x61, 0x6c,
	0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eventEmitter_eventEmitter_proto_rawDescOnce sync.Once
	file_eventEmitter_eventEmitter_proto_rawDescData = file_eventEmitter_eventEmitter_proto_rawDesc
)

func file_eventEmitter_eventEmitter_proto_rawDescGZIP() []byte {
	file_eventEmitter_eventEmitter_proto_rawDescOnce.Do(func() {
		file_eventEmitter_eventEmitter_proto_rawDescData = protoimpl.X.CompressGZIP(file_eventEmitter_eventEmitter_proto_rawDescData)
	})
	return file_eventEmitter_eventEmitter_proto_rawDescData
}

var file_eventEmitter_eventEmitter_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_eventEmitter_eventEmitter_proto_goTypes = []any{
	(*CreateLogEventRequest)(nil),     // 0: CreateLogEventRequest
	(*CreateLogEventResponse)(nil),    // 1: CreateLogEventResponse
	(*CreateMailerEventRequest)(nil),  // 2: CreateMailerEventRequest
	(*DataMap)(nil),                   // 3: DataMap
	(*CreateMailerEventResponse)(nil), // 4: CreateMailerEventResponse
}
var file_eventEmitter_eventEmitter_proto_depIdxs = []int32{
	3, // 0: CreateMailerEventRequest.data:type_name -> DataMap
	0, // 1: EventEmitter.AddLogEvent:input_type -> CreateLogEventRequest
	2, // 2: EventEmitter.AddMailerEvent:input_type -> CreateMailerEventRequest
	1, // 3: EventEmitter.AddLogEvent:output_type -> CreateLogEventResponse
	4, // 4: EventEmitter.AddMailerEvent:output_type -> CreateMailerEventResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_eventEmitter_eventEmitter_proto_init() }
func file_eventEmitter_eventEmitter_proto_init() {
	if File_eventEmitter_eventEmitter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eventEmitter_eventEmitter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eventEmitter_eventEmitter_proto_goTypes,
		DependencyIndexes: file_eventEmitter_eventEmitter_proto_depIdxs,
		MessageInfos:      file_eventEmitter_eventEmitter_proto_msgTypes,
	}.Build()
	File_eventEmitter_eventEmitter_proto = out.File
	file_eventEmitter_eventEmitter_proto_rawDesc = nil
	file_eventEmitter_eventEmitter_proto_goTypes = nil
	file_eventEmitter_eventEmitter_proto_depIdxs = nil
}
